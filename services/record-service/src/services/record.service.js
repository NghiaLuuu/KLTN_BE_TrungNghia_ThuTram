const RecordModel = require("../models/record.model");

// ðŸ”¹ Táº¡o record má»›i
exports.createRecord = async (data) => {
  console.log("ðŸ“¥ Creating record with data:", data);

  const {
    appointmentId,
    patientId,
    patientInfo,
    bookedBy,
    dentistId,
    preferredDentistId,
    serviceId,
    type,
    notes
  } = data;

  // ðŸ”¹ XÃ¡c Ä‘á»‹nh patientId / patientInfo
  // ðŸ”¹ XÃ¡c Ä‘á»‹nh patientId / patientInfo tá»« payload
let finalPatientId = null;
let finalPatientInfo = null;

// Náº¿u patientInfo cÃ³ trong payload â†’ staff Ä‘áº·t há»™
  if (patientInfo) {
    const { name, phone, birthYear } = patientInfo;
    if (!name || !phone || !birthYear) {
      throw new Error("patientInfo khÃ´ng há»£p lá»‡ (thiáº¿u name, phone hoáº·c birthYear)");
    }
    finalPatientInfo = patientInfo;
  }
  // Náº¿u bookedBy cÃ³ â†’ patient tá»± Ä‘áº·t
  else if (bookedBy) {
    finalPatientId = bookedBy;
  }
  // Náº¿u appointment gá»­i patientId (hiáº¿m dÃ¹ng) â†’ Æ°u tiÃªn
  else if (patientId) {
    finalPatientId = patientId;
  }
  // KhÃ´ng cÃ³ thÃ´ng tin há»£p lá»‡ â†’ lá»—i
  else {
    throw new Error("Cáº§n cÃ³ patientId hoáº·c patientInfo");
  }



  // ðŸ”¹ XÃ¡c Ä‘á»‹nh dentistId
  const finalDentistId = dentistId || preferredDentistId;
  if (!finalDentistId) {
    throw new Error("dentistId khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng");
  }

  // ðŸ”¹ Táº¡o record má»›i
  const record = new RecordModel({
    appointmentId: appointmentId || null,
    patientId: finalPatientId,
    patientInfo: finalPatientInfo,
    dentistId: finalDentistId,
    serviceId,
    type,
    notes: notes || ""
  });

  await record.save();
  console.log("âœ… Record saved:", record);
  return record;
};

// ðŸ”¹ Cáº­p nháº­t record
exports.updateRecord = async (id, updateData) => {
  return await RecordModel.findByIdAndUpdate(id, updateData, { new: true });
};

// ðŸ”¹ Complete record (status = done)
exports.completeRecord = async (id) => {
  return await RecordModel.findByIdAndUpdate(id, { status: "done" }, { new: true });
};

// ðŸ”¹ Láº¥y record theo id
exports.getRecordById = async (id) => {
  return await RecordModel.findById(id);
};

// ðŸ”¹ Search record
exports.searchRecords = async (filter) => {
  return await RecordModel.find(filter || {});
};
