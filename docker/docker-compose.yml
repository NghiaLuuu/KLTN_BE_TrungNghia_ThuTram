version: '3.8'

services:
  # Infrastructure Services
  mongodb:
    image: mongo:6.0
    container_name: dental_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: dental_clinic
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - dental-network

  redis:
    image: redis:7-alpine
    container_name: dental_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - dental-network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: dental_rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - dental-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  # Microservices
  auth-service:
    build:
      context: ../services/auth-service
      dockerfile: Dockerfile
    container_name: dental_auth_service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_auth?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here}
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  room-service:
    build:
      context: ../services/room-service
      dockerfile: Dockerfile
    container_name: dental_room_service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_room?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network

  schedule-service:
    build:
      context: ../services/schedule-service
      dockerfile: Dockerfile
    container_name: dental_schedule_service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - PORT=3005
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_schedule?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network

  appointment-service:
    build:
      context: ../services/appointment-service
      dockerfile: Dockerfile
    container_name: dental_appointment_service
    restart: unless-stopped
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=production
      - PORT=3006
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_appointment?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network

  record-service:
    build:
      context: ../services/record-service
      dockerfile: Dockerfile
    container_name: dental_record_service
    restart: unless-stopped
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=production
      - PORT=3010
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_record?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network

  medicine-service:
    build:
      context: ../services/medicine-service
      dockerfile: Dockerfile
    container_name: dental_medicine_service
    restart: unless-stopped
    ports:
      - "3009:3009"
    environment:
      - NODE_ENV=production
      - PORT=3009
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_medicine?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network

  service-service:
    build:
      context: ../services/service-service
      dockerfile: Dockerfile
    container_name: dental_service_service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_service?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network

  invoice-service:
    build:
      context: ../services/invoice-service
      dockerfile: Dockerfile
    container_name: dental_invoice_service
    restart: unless-stopped
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=production
      - PORT=3008
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_invoice?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network

  payment-service:
    build:
      context: ../services/payment-service
      dockerfile: Dockerfile
    container_name: dental_payment_service
    restart: unless-stopped
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=production
      - PORT=3007
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_payment?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network

  statistic-service:
    build:
      context: ../services/statistic-service
      dockerfile: Dockerfile
    container_name: dental_statistic_service
    restart: unless-stopped
    ports:
      - "3011:3011"
    environment:
      - NODE_ENV=production
      - PORT=3011
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_statistic?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network

  chat-service:
    build:
      context: ../services/chat-service
      dockerfile: Dockerfile
    container_name: dental_chat_service
    restart: unless-stopped
    ports:
      - "3012:3012"
    environment:
      - NODE_ENV=production
      - PORT=3012
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_chat?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here}
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network

  chatbot-service:
    build:
      context: ../services/chatbot-service
      dockerfile: Dockerfile
    container_name: dental_chatbot_service
    restart: unless-stopped
    ports:
      - "3013:3013"
    environment:
      - NODE_ENV=production
      - PORT=3013
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dental_clinic_chatbot?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - dental-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  dental-network:
    driver: bridge
