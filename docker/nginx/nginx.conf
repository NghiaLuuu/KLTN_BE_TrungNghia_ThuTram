events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Security Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';";

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Upstream servers
    upstream auth_backend {
        server auth-service:3001;
    }

    upstream room_backend {
        server room-service:3002;
    }

    upstream service_backend {
        server service-service:3003;
    }

    upstream schedule_backend {
        server schedule-service:3005;
    }

    upstream appointment_backend {
        server appointment-service:3006;
    }

    upstream payment_backend {
        server payment-service:3007;
    }

    upstream invoice_backend {
        server invoice-service:3008;
    }

    upstream medicine_backend {
        server medicine-service:3009;
    }

    upstream record_backend {
        server record-service:3010;
    }

    upstream statistic_backend {
        server statistic-service:3011;
    }

    upstream chat_backend {
        server chat-service:3012;
    }

    upstream chatbot_backend {
        server chatbot-service:3013;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name yourdomain.com www.yourdomain.com;
        return 301 https://$server_name$request_uri;
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name yourdomain.com www.yourdomain.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Auth Service Routes
        location /api/auth/ {
            limit_req zone=auth burst=20 nodelay;
            proxy_pass http://auth_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Room Service Routes
        location /api/rooms/ {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://room_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Service Management Routes
        location /api/services/ {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://service_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Schedule Service Routes
        location /api/schedules/ {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://schedule_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Appointment Service Routes
        location /api/appointments/ {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://appointment_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Payment Service Routes
        location /api/payments/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://payment_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Invoice Service Routes
        location /api/invoices/ {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://invoice_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Medicine Service Routes
        location /api/medicines/ {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://medicine_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Record Service Routes
        location /api/records/ {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://record_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Statistic Service Routes
        location /api/statistics/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://statistic_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Chat Service Routes (WebSocket support)
        location /api/chat/ {
            proxy_pass http://chat_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Chatbot Service Routes
        location /api/chatbot/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://chatbot_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health Check Endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static files (if you serve frontend from same domain)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
        }

        location ~ ^/(\.user.ini|\.htaccess|\.htpasswd|\.sh|\.bak)$ {
            deny all;
        }

        # Default location
        location / {
            return 404 "API endpoint not found";
            add_header Content-Type text/plain;
        }
    }

    # API Documentation Server (optional)
    server {
        listen 443 ssl http2;
        server_name api-docs.yourdomain.com;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        location / {
            # Serve API documentation (Swagger/OpenAPI)
            root /var/www/api-docs;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
    }
}